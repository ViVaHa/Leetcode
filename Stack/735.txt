class Solution:
    def asteroidCollision(self, asteroids):
        """
        :type asteroids: List[int]
        :rtype: List[int]
        """
        if len(asteroids)==0:
            return []
        from collections import deque
        stack=deque()
        stack.append(asteroids[0])
        i=1
        toAdd=True
        prev=None
        while i<len(asteroids):
            if stack and stack[-1]+asteroids[i]==0 and stack[-1]>0:
                stack.pop()
                i+=1
            else:
                while stack and stack[-1]>0 and asteroids[i]<0 and abs(asteroids[i])>=stack[-1]:
                    prev=stack[-1]
                    stack.pop()
                    if abs(asteroids[i])==prev:
                        break
                if prev==abs(asteroids[i]):
                    i+=1
                    prev=None
                elif stack and stack[-1]>0 and asteroids[i]<0 and abs(asteroids[i])<stack[-1]:
                    i+=1
                    prev=None
                else:
                    stack.append(asteroids[i])
                    i+=1
                    prev=None
        ans=[]
        i=0
        while i<len(stack):
            ans.append(stack[i])
            i+=1
        return ans
