# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    index=0
    def buildTree(self, preorder, inorder):
        """
        :type preorder: List[int]
        :type inorder: List[int]
        :rtype: TreeNode
        """
        if len(inorder)==0:
            return None
        start=0
        end=len(inorder)-1
        root=self.build(preorder,inorder,start,end)
        return root
    def build(self,preorder,inorder,start,end):
        if start>end:
            return None
        node=TreeNode(preorder[self.index])
        self.index+=1
        if start==end:
            return node
        index=inorder.index(node.val)
        lh=self.build(preorder,inorder,start,index-1)
        rh=self.build(preorder,inorder,index+1,end)
        node.left=lh
        node.right=rh
        return node
        
        
            
        
