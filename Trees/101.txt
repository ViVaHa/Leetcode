# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isSymmetric(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        if root is None:
            return True
        root1=root
        root2=root
        return self.findSymmetric(root1.left,root2.right)
    def findSymmetric(self,root1,root2):
        if root1 is None and root2 is None:
            return True
        elif root1 is None and root2 is not None:
            return False
        elif root2 is None and root1 is not None:
            return False
        if root1.val==root2.val:
            return self.findSymmetric(root1.left,root2.right) and self.findSymmetric(root1.right,root2.left)
        else:
            return False
        
