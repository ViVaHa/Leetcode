# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def deleteNode(self, root, key):
        """
        :type root: TreeNode
        :type key: int
        :rtype: TreeNode
        """
        if root is None:
            return None
        root=self.deleteKey(root,key)
        return root
    def deleteKey(self,root,key):
        if root is None:
            return None
        l=r=None
        if root.val>key:
            root.left=self.deleteKey(root.left,key)
        elif root.val<key:
            root.right=self.deleteKey(root.right,key)
        else:
            if root.left is None and root.right is None:
                return None
            elif root.left is None:
                return root.right
            elif root.right is None:
                return root.left
            else:
                value=self.findMaxNode(root.left)
                root.val=value
                root.left=self.deleteNode(root.left,value)
            return root
        return root
    
    def findMaxNode(self,root):
        if root is None:
            return None
        while root and root.right:
            root=root.right
        return root.val
                
